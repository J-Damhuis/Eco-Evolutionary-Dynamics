Made model with choice based on number of individuals present at resources and individual's feeding efficiency
Talked with Luis about different resource dynamics and discussed three different ways of implementing them
Had a talk and decided on using different model with choice based on summed feeding efficiencies of individuals present at resources
Made that model
Simulated with β ranging from 0.0 to 1.0 and s ranging from 0.0 to 10.0.
Found out speciation occurs even at high selection coefficients with random choice; also oscillations occur
Planned to change the model to use variable population size rather than a constant one (this has not been done yet)
Hypothesised that this could be because fitness gained is based on relative feeding efficiency, meaning that individuals with low feeding efficiency can still obtain high fitness if the other individuals have an even lower feeding efficiency
Proposed a way to fix this by changing the amount of the resource that could be found to depend on the sum of the feeding efficiencies of the individuals present at the resource
Ran a few more simulations with different parameter values:
	- β = 0.0, s = 10.0 and 300 feeding rounds: no different dynamics than at 10 feeding rounds
	- β = 0.0, s = 100.0 and 350 feeding rounds: speciation still occurs
	- β = 0.0, s = 1000.0 and 350 feeding rounds: no more speciation; hardly any variation within population; population mean still moves from fitness optimum
Talked with Rampal and he agreed with our way of changing the model. Main things to keep in mind:
	- Could be a numerical issue when taking the exponential of a large (negative) number -> can be checked by using step-based fitness landscape
	- Kmeans might not be good enough at defining two clusters when one of them is a lot smaller than the other -> he will see if he can find a different method someone used
	- System dynamics can be quite different when you use a different scaling factor for the amount of resource which is taken up
	- Think about how the model would scale if there were more than two resources (don't have to do much with this though)
Rampal sent a different method for defining when two clusters are present (taking the largest gap between two consecutive data points and dividing it by the mean gap between any data point), but it seems to be very inconsistent
Implemented the fix for fitness being based on relative feeding efficiency and it appears to be working as intended
Thought of another proxy for speciation: using the largest gap to split the population in two clusters and comparing the means of the two groups, but this seems to say more about the variance of the population than the likelihood of two clusters being present
Found yet another proxy for speciation: Gaussian Mixture Models. General case of kmeans, but this one can actually use different standard deviations per cluster. It also gives log-likelihoods
Figured out why the mean X-value of the population moves towards the middle before speciation actually occurs: the fitness advantage of individuals which are better adapted to resource 2 over the individuals which are worse adapted to resource 2 when feeding on resource 2 is greater than the other way around
Put all data together and created a heatmap of the parameter space where the population uses a specialist or generalist strategy or where speciation occurs.
Showed the heatmap to Rampal and Sander. Some things they mentioned:
	- It is logical that the branching point is at the generalist strategy. It has something to do with bifurcation analysis
	- The boundaries between different outcomes of the simulations are pretty sharp. Raphael said that it coincided with his findings however
	- Old model is a soft selection model whereas new model is a hard selection model
	- Run more simulations with different population sizes and feeding rounds
The two different metrics used to determine whether the population uses a specialist or generalist strategy give the exact same outcome besides the case for s = 0.0
Lower values of δ cause one of the metrics to determine the population's strategy to stop working since the population would rarely be able to find more than 95% of both resources at a low degree of optimal choice
Tried to make the threshold dynamic by basing it on δ but I could not find a nice way to make this work
Had a talk with Raphael to figure out where to take this project and we came up with the following suggestions:
	- Change population size (this might straighten out the upper bound of the parameter space that supports speciation or even increase it)
	- Add parapatry to the model (this makes the IBM even more similar to the analytical model)
	- Add sexual reproduction (though Raphael does not think this would change the behaviour of the model)
Gave an introductory talk at Rampal's group meeting and some discussion points were brough up:
	- More species could emerge if I let β evolve (I may look into this)
	- I could start the simulations with two specialists to make sure that the population ends up using a generalist strategy (to validate the cut-off point of the simulations)
When only checking the simulations which ended with a generalist population, the cut-off point seems reasonable: the ones in the parameter space that had mostly generalists still showed generalists
We noticed that a fair amount of simulations which had a speciation event had one of the species go extinct at some point, so we decided to check the entire parameter space to see if speciation was stable
Speciation was unstable in the vast majority of parameter space (most likely due to the oscillations which also increase in amplitude)
Found out that there was a mistake in the code: the food an individual had found would be carried over to its offspring
Fixed the mistake (added one line *sigh*) and speciation is now stable
Also noticed that the higher the degree of optimal choice, the sooner the two species split (this also happened at a trait value closer to the extreme)
Four simulations' heatmap.csv file was not the right size (not 3000 generarions). No idea why, just decided to run these again
Checked whether only using the last generation's speciation value rather than that of the whole simulation made a big difference; only differences were at s=0.0 and a few at s=0.2/β=0.2
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Looked further into using variable population size, but I think that it would not add too much: the main interesting part is the emergent property of carrying capacity and this may not even be emergent.
To have a variable population size I would need to use a poisson distribution with a certain mean. This mean would have to reflect an individual's fitness. An individual's fitness depends on its own trait value, the total amount of resource, and how many other individuals there are.
So by tweaking the way the mean depends on an individual's fitness, I would basically be controlling the carrying capacity.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Turns out the difference between the loglikelihoods of GMMs with 1 and 2 groups of simulations with too high selection coefficients for speciation increases as the number of individuals increases. 
After testing, it turns out this is linear (y=0.12x+20) with y being the average difference in loglikelihoods and x being the number of individuals
Using a larger population size does not appear to affect the shape of the plots; it just increases the upper bound
I might use a different metric to determine speciation just so the analysis can be done purely in C++, which reduces the size of the output files
Raphael uses the ratio of within group variance and all variance